[
  { "type": "SKIP", "regexp": "^[\\\\s+\\\\n]" },
  { "type": "SINGLE_LINE_COMMENT", "regexp": "^\\\\/\\\\/.*" },
  { "type": "SEMICOLON", "regexp": "^;" },
  { "type": "COLON", "regexp": "^:" },
  { "type": "ANNOTATION", "regexp": "^@" },
  { "type": "CLASS", "regexp": "^class" },
  { "type": "ENUM", "regexp": "^enum" },
  { "type": "CURLY_START", "regexp": "^{" },
  { "type": "CURLY_END", "regexp": "^}" },
  { "type": "CONST", "regexp": "^const" },
  { "type": "FACTORY", "regexp": "^factory" },
  { "type": "SINGLE_STRING", "regexp": "^'[^']*'" },
  { "type": "DOUBLE_STRING", "regexp": "^\\\"[^\\\"]*\\\"" },
  { "type": "BOOLEAN_TRUE", "regexp": "^true" },
  { "type": "BOOLEAN_FALSE", "regexp": "^false" },
  { "type": "DECIMAL_NUMBER", "regexp": "^[0-9]*\\\\.[0-9]+" },
  { "type": "NUMBER", "regexp": "^[0-9]+" },
  { "type": "FINAL", "regexp": "^final" },
  { "type": "VAR", "regexp": "^var" },
  { "type": "PAREN_START", "regexp": "^\\\\(" },
  { "type": "PAREN_END", "regexp": "^\\\\)" },
  { "type": "REQUIRED", "regexp": "^required" },
  { "type": "COMMA", "regexp": "^," },
  { "type": "DOT", "regexp": "^\\\\." },
  { "type": "GENERIC_START", "regexp": "^<" },
  { "type": "GENERIC_END", "regexp": "^>" },
  { "type": "OPTIONAL", "regexp": "^\\\\?" },
  { "type": "EQUALS", "regexp": "^\\\\=" },
  { "type": "IDENTIFIER", "regexp": "^[a-zA-Z_][a-zA-Z0-9_]*" }
]
