# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  check-formatting:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./tool
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Check formatting
      run: ./check_formatting.sh
  test:
    defaults:
      run:
        working-directory: ./tool
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up Dart
      uses: dart-lang/setup-dart@v1

    - name: pub get on fixtures
      run: (cd ./generation_test/fixtures && dart pub get)

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
  test-generated:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/genq_test
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Set up Dart
      uses: dart-lang/setup-dart@v1
    - name: pub get
      run: dart pub get
    - name: run_tests.sh
      run: ./run_tests.sh
  goreleaser:
    runs-on: ubuntu-latest
    needs: [test, test-generated, check-formatting]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      # More assembly might be required: Docker logins, GPG, etc.
      # It all depends on your needs.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: build --clean --skip-validate
          workdir: ./tool
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_BREW: ${{ secrets.GH_BREW }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ./tool/dist
          path: |
            dist
